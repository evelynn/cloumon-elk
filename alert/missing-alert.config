input {
  exec {
    command => "/home/gmonitor/cloumon/alert/get-metric-count-in-window.sh http://{es_host}:5911 default-hadoop-jmx-metrics 20"
    interval => 60
  }
  exec {
    command => "/home/gmonitor/cloumon/alert/get-metric-count-in-window.sh http://{es_host}:5911 default-hadoop-ganglia-metrics 20"
    interval => 60
  }
  exec {
    command => "/home/gmonitor/cloumon/alert/get-metric-count-in-window.sh http://{es_host}:5911 default-tajo-ganglia-metrics 20"
    interval => 60
  }
  exec {
    command => "/home/gmonitor/cloumon/alert/get-metric-count-in-window.sh http://{es_host}:5911 default-system-http-metrics 20"
    interval => 60
  }
  exec {
    command => "/home/gmonitor/cloumon/alert/get-metric-count-in-window.sh http://{es_host}:5911 default-flume-jmx-metrics 20"
    interval => 60
  }
  exec {
    command => "/home/gmonitor/cloumon/alert/get-metric-count-in-window.sh http://{es_host}:5911 default-flume-ganglia-metrics 20"
    interval => 60
  }
  exec {
    command => "/home/gmonitor/cloumon/alert/get-metric-count-in-window.sh http://{es_host}:5911 default-hbase-ganglia-metrics 20"
    interval => 60
  }
  exec {
    command => "/home/gmonitor/cloumon/alert/get-metric-count-in-window.sh http://{es_host}:5911 default-hbase-jmx-metrics 20"
    interval => 60
  }
}

filter {
  ruby {
    init => "
      require 'json'
      
    "
    code => "
      expected_count=16
      es_query_result = JSON.parse(event['message'])
      if not es_query_result.has_key?('aggregations') or es_query_result['aggregations']['host']['buckets'].size() == 0
        event.cancel 
        return
      end

      missing_alerts = {}
      es_query_result['aggregations']['host']['buckets'].each do |host|
        host['by_name']['buckets'].each do |metric|
          if metric['doc_count'] < expected_count 
            missing_alerts[host['key']] = [] if not missing_alerts.has_key?(host['key'])
            missing_alerts[host['key']].push( {:m => metric['key'], :c => metric['doc_count']})
          end
        end
      end

      if missing_alerts.size() == 0
        event.cancel
      end

      # generate readable form
      messages='\n'
      index_name=es_query_result['hits']['hits'][0]['_index'].reverse()
      index_name=index_name[index_name.index('-')+1..-1].reverse()
      messages += 'For ' + index_name + '\n'
      messages += 'These are metrics that lower than expected count ' + expected_count.to_s + '\n'
      missing_alerts.each do |host, metrics|
        messages += 'At ' + host + '\n'
        metrics.each do |m|
          messages += '    ' + m[:m] + ' is ' + m[:c].to_s + '\n'
        end
        messages += '\n'
      end
      event['message'] = messages
    "
  }
}

output {
#  email {
#    to => "<user@mail.com>"
#    from => "<alert@mail.com>" 
#    subject => "Warning: There're missing metrics."
#    body => "Missing metrics are below: %{message}"
#    options => {
#      smtpIporHost => 'smtp.gmail.com'
#      port => '587'
#      domain => 'smtp.gmail.com'
#      authenticationType => 'plain'
#      userName => ''
#      password => ''
#      starttls => true
#    }
#  }
}
